(self.webpackChunkgeonode_mapstore_client=self.webpackChunkgeonode_mapstore_client||[]).push([[86744],{86744:(e,r,t)=>{"use strict";function n(e,r,t){void 0===t&&(t={});var n={type:"Feature"};return(0===t.id||t.id)&&(n.id=t.id),t.bbox&&(n.bbox=t.bbox),n.properties=r||{},n.geometry=e,n}function o(e,r,t){if(void 0===t&&(t={}),e.length<2)throw new Error("coordinates must be an array of two or more positions");return n({type:"LineString",coordinates:e},r,t)}function i(e,r){void 0===r&&(r={});var t={type:"FeatureCollection"};return r.id&&(t.id=r.id),r.bbox&&(t.bbox=r.bbox),t.features=e,t}function a(e){return!isNaN(e)&&null!==e&&!Array.isArray(e)}function u(e){if(Array.isArray(e))return e;if("Feature"===e.type){if(null!==e.geometry)return e.geometry.coordinates}else if(e.coordinates)return e.coordinates;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")}function s(e){return"Feature"===e.type?e.geometry:e}function l(e,r,t){if(void 0===t&&(t={}),!e)throw new Error("point is required");if(!r)throw new Error("polygon is required");var n=function(e){if(!e)throw new Error("coord is required");if(!Array.isArray(e)){if("Feature"===e.type&&null!==e.geometry&&"Point"===e.geometry.type)return e.geometry.coordinates;if("Point"===e.type)return e.coordinates}if(Array.isArray(e)&&e.length>=2&&!Array.isArray(e[0])&&!Array.isArray(e[1]))return e;throw new Error("coord must be GeoJSON Point or an Array of numbers")}(e),o=s(r),i=o.type,a=r.bbox,u=o.coordinates;if(a&&!1===function(e,r){return r[0]<=e[0]&&r[1]<=e[1]&&r[2]>=e[0]&&r[3]>=e[1]}(n,a))return!1;"Polygon"===i&&(u=[u]);for(var l=!1,f=0;f<u.length&&!l;f++)if(c(n,u[f][0],t.ignoreBoundary)){for(var g=!1,y=1;y<u[f].length&&!g;)c(n,u[f][y],!t.ignoreBoundary)&&(g=!0),y++;g||(l=!0)}return l}function c(e,r,t){var n=!1;r[0][0]===r[r.length-1][0]&&r[0][1]===r[r.length-1][1]&&(r=r.slice(0,r.length-1));for(var o=0,i=r.length-1;o<r.length;i=o++){var a=r[o][0],u=r[o][1],s=r[i][0],l=r[i][1];if(e[1]*(a-s)+u*(s-e[0])+l*(e[0]-a)==0&&(a-e[0])*(s-e[0])<=0&&(u-e[1])*(l-e[1])<=0)return!t;u>e[1]!=l>e[1]&&e[0]<(s-a)*(e[1]-u)/(l-u)+a&&(n=!n)}return n}function f(e,r){if("Feature"===e.type)r(e,0);else if("FeatureCollection"===e.type)for(var t=0;t<e.features.length&&!1!==r(e.features[t],t);t++);}function g(e,r){!function(e,r){var t,n,o,i,a,u,s,l,c,f,g=0,y="FeatureCollection"===e.type,p="Feature"===e.type,h=y?e.features.length:1;for(t=0;t<h;t++){for(u=y?e.features[t].geometry:p?e.geometry:e,l=y?e.features[t].properties:p?e.properties:{},c=y?e.features[t].bbox:p?e.bbox:void 0,f=y?e.features[t].id:p?e.id:void 0,a=(s=!!u&&"GeometryCollection"===u.type)?u.geometries.length:1,o=0;o<a;o++)if(null!==(i=s?u.geometries[o]:u))switch(i.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":if(!1===r(i,g,l,c,f))return!1;break;case"GeometryCollection":for(n=0;n<i.geometries.length;n++)if(!1===r(i.geometries[n],g,l,c,f))return!1;break;default:throw new Error("Unknown Geometry Type")}else if(!1===r(null,g,l,c,f))return!1;g++}}(e,(function(e,t,o,i,a){var u,s=null===e?null:e.type;switch(s){case null:case"Point":case"LineString":case"Polygon":return!1!==r(n(e,o,{bbox:i,id:a}),t,0)&&void 0}switch(s){case"MultiPoint":u="Point";break;case"MultiLineString":u="LineString";break;case"MultiPolygon":u="Polygon"}for(var l=0;l<e.coordinates.length;l++){var c=e.coordinates[l];if(!1===r(n({type:u,coordinates:c},o),t,l))return!1}}))}t.d(r,{Z:()=>x});const y=function(e){if(!e)throw new Error("geojson is required");var r=[];return g(e,(function(e){!function(e,r){var t=[],n=e.geometry;if(null!==n){switch(n.type){case"Polygon":t=u(n);break;case"LineString":t=[u(n)]}t.forEach((function(t){var n=function(e,r){var t=[];return e.reduce((function(e,n){var i,a,u,s,l,c,f=o([e,n],r);return f.bbox=(a=n,u=(i=e)[0],s=i[1],[u<(l=a[0])?u:l,s<(c=a[1])?s:c,u>l?u:l,s>c?s:c]),t.push(f),n})),t}(t,e.properties);n.forEach((function(e){e.id=r.length,r.push(e)}))}))}}(e,r)})),i(r)};var p=t(78109);function h(e,r){var t=u(e),o=u(r);if(2!==t.length)throw new Error("<intersects> line1 must only contain 2 coordinates");if(2!==o.length)throw new Error("<intersects> line2 must only contain 2 coordinates");var i=t[0][0],s=t[0][1],l=t[1][0],c=t[1][1],f=o[0][0],g=o[0][1],y=o[1][0],p=o[1][1],h=(p-g)*(l-i)-(y-f)*(c-s);if(0===h)return null;var d=((y-f)*(s-g)-(p-g)*(i-f))/h,v=((l-i)*(s-g)-(c-s)*(i-f))/h;return d>=0&&d<=1&&v>=0&&v<=1?function(e,r,t){if(void 0===t&&(t={}),!e)throw new Error("coordinates is required");if(!Array.isArray(e))throw new Error("coordinates must be an Array");if(e.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!a(e[0])||!a(e[1]))throw new Error("coordinates must contain numbers");return n({type:"Point",coordinates:e},r,t)}([i+d*(l-i),s+d*(c-s)]):null}const d=function(e,r){var t={},o=[];if("LineString"===e.type&&(e=n(e)),"LineString"===r.type&&(r=n(r)),"Feature"===e.type&&"Feature"===r.type&&null!==e.geometry&&null!==r.geometry&&"LineString"===e.geometry.type&&"LineString"===r.geometry.type&&2===e.geometry.coordinates.length&&2===r.geometry.coordinates.length){var a=h(e,r);return a&&o.push(a),i(o)}var s=p();return s.load(y(r)),f(y(e),(function(e){f(s.search(e),(function(r){var n=h(e,r);if(n){var i=u(n).join(",");t[i]||(t[i]=!0,o.push(n))}}))})),i(o)};function v(e,r){void 0===r&&(r={});var t=s(e);switch(r.properties||"Feature"!==e.type||(r.properties=e.properties),t.type){case"Polygon":return function(e,r){return void 0===r&&(r={}),b(s(e).coordinates,r.properties?r.properties:"Feature"===e.type?e.properties:{})}(t,r);case"MultiPolygon":return function(e,r){void 0===r&&(r={});var t=s(e).coordinates,n=r.properties?r.properties:"Feature"===e.type?e.properties:{},o=[];return t.forEach((function(e){o.push(b(e,n))})),i(o)}(t,r);default:throw new Error("invalid poly")}}function b(e,r){return e.length>1?function(e,r,t){return void 0===t&&(t={}),n({type:"MultiLineString",coordinates:e},r,t)}(e,r):o(e[0],r)}function m(e,r){for(var t=0;t<e.coordinates.length-1;t++)if(P(e.coordinates[t],e.coordinates[t+1],r.coordinates))return!0;return!1}function w(e,r){for(var t=0,n=r.coordinates;t<n.length;t++)if(l(n[t],e))return!0;return d(r,v(e)).features.length>0}function P(e,r,t){var n=t[0]-e[0],o=t[1]-e[1],i=r[0]-e[0],a=r[1]-e[1];return 0==n*a-o*i&&(Math.abs(i)>=Math.abs(a)?i>0?e[0]<=t[0]&&t[0]<=r[0]:r[0]<=t[0]&&t[0]<=e[0]:a>0?e[1]<=t[1]&&t[1]<=r[1]:r[1]<=t[1]&&t[1]<=e[1])}const S=function(e,r){var t=!0;return g(e,(function(e){g(r,(function(r){if(!1===t)return!1;t=function(e,r){switch(e.type){case"Point":switch(r.type){case"Point":return t=e.coordinates,n=r.coordinates,!(t[0]===n[0]&&t[1]===n[1]);case"LineString":return!m(r,e);case"Polygon":return!l(e,r)}break;case"LineString":switch(r.type){case"Point":return!m(e,r);case"LineString":return!(d(e,r).features.length>0);case"Polygon":return!w(r,e)}break;case"Polygon":switch(r.type){case"Point":return!l(r,e);case"LineString":return!w(e,r);case"Polygon":return!function(e,r){for(var t=0,n=e.coordinates[0];t<n.length;t++)if(l(n[t],r))return!0;for(var o=0,i=r.coordinates[0];o<i.length;o++)if(l(i[o],e))return!0;return d(v(e),v(r)).features.length>0}(r,e)}}var t,n;return!1}(e.geometry,r.geometry)}))})),t};function x(e,r){var t=!1;return g(e,(function(e){g(r,(function(r){if(!0===t)return!0;t=!S(e.geometry,r.geometry)}))})),t}},57996:(e,r,t)=>{"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=t(84102);function o(e,r,t){if(null!==e)for(var n,i,a,u,s,l,c,f,g=0,y=0,p=e.type,h="FeatureCollection"===p,d="Feature"===p,v=h?e.features.length:1,b=0;b<v;b++){s=(f=!!(c=h?e.features[b].geometry:d?e.geometry:e)&&"GeometryCollection"===c.type)?c.geometries.length:1;for(var m=0;m<s;m++){var w=0,P=0;if(null!==(u=f?c.geometries[m]:c)){l=u.coordinates;var S=u.type;switch(g=!t||"Polygon"!==S&&"MultiPolygon"!==S?0:1,S){case null:break;case"Point":if(!1===r(l,y,b,w,P))return!1;y++,w++;break;case"LineString":case"MultiPoint":for(n=0;n<l.length;n++){if(!1===r(l[n],y,b,w,P))return!1;y++,"MultiPoint"===S&&w++}"LineString"===S&&w++;break;case"Polygon":case"MultiLineString":for(n=0;n<l.length;n++){for(i=0;i<l[n].length-g;i++){if(!1===r(l[n][i],y,b,w,P))return!1;y++}"MultiLineString"===S&&w++,"Polygon"===S&&P++}"Polygon"===S&&w++;break;case"MultiPolygon":for(n=0;n<l.length;n++){for(P=0,i=0;i<l[n].length;i++){for(a=0;a<l[n][i].length-g;a++){if(!1===r(l[n][i][a],y,b,w,P))return!1;y++}P++}w++}break;case"GeometryCollection":for(n=0;n<u.geometries.length;n++)if(!1===o(u.geometries[n],r,t))return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}function i(e,r){var t;switch(e.type){case"FeatureCollection":for(t=0;t<e.features.length&&!1!==r(e.features[t].properties,t);t++);break;case"Feature":r(e.properties,0)}}function a(e,r){if("Feature"===e.type)r(e,0);else if("FeatureCollection"===e.type)for(var t=0;t<e.features.length&&!1!==r(e.features[t],t);t++);}function u(e,r){var t,n,o,i,a,u,s,l,c,f,g=0,y="FeatureCollection"===e.type,p="Feature"===e.type,h=y?e.features.length:1;for(t=0;t<h;t++){for(u=y?e.features[t].geometry:p?e.geometry:e,l=y?e.features[t].properties:p?e.properties:{},c=y?e.features[t].bbox:p?e.bbox:void 0,f=y?e.features[t].id:p?e.id:void 0,a=(s=!!u&&"GeometryCollection"===u.type)?u.geometries.length:1,o=0;o<a;o++)if(null!==(i=s?u.geometries[o]:u))switch(i.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":if(!1===r(i,g,l,c,f))return!1;break;case"GeometryCollection":for(n=0;n<i.geometries.length;n++)if(!1===r(i.geometries[n],g,l,c,f))return!1;break;default:throw new Error("Unknown Geometry Type")}else if(!1===r(null,g,l,c,f))return!1;g++}}function s(e,r){u(e,(function(e,t,o,i,a){var u,s=null===e?null:e.type;switch(s){case null:case"Point":case"LineString":case"Polygon":return!1!==r(n.feature(e,o,{bbox:i,id:a}),t,0)&&void 0}switch(s){case"MultiPoint":u="Point";break;case"MultiLineString":u="LineString";break;case"MultiPolygon":u="Polygon"}for(var l=0;l<e.coordinates.length;l++){var c={type:u,coordinates:e.coordinates[l]};if(!1===r(n.feature(c,o),t,l))return!1}}))}function l(e,r){s(e,(function(e,t,i){var a=0;if(e.geometry){var u=e.geometry.type;if("Point"!==u&&"MultiPoint"!==u){var s,l=0,c=0,f=0;return!1!==o(e,(function(o,u,g,y,p){if(void 0===s||t>l||y>c||p>f)return s=o,l=t,c=y,f=p,void(a=0);var h=n.lineString([s,o],e.properties);if(!1===r(h,t,i,p,a))return!1;a++,s=o}))&&void 0}}}))}function c(e,r){if(!e)throw new Error("geojson is required");s(e,(function(e,t,o){if(null!==e.geometry){var i=e.geometry.type,a=e.geometry.coordinates;switch(i){case"LineString":if(!1===r(e,t,o,0,0))return!1;break;case"Polygon":for(var u=0;u<a.length;u++)if(!1===r(n.lineString(a[u],e.properties),t,o,u))return!1}}}))}r.coordAll=function(e){var r=[];return o(e,(function(e){r.push(e)})),r},r.coordEach=o,r.coordReduce=function(e,r,t,n){var i=t;return o(e,(function(e,n,o,a,u){i=0===n&&void 0===t?e:r(i,e,n,o,a,u)}),n),i},r.featureEach=a,r.featureReduce=function(e,r,t){var n=t;return a(e,(function(e,o){n=0===o&&void 0===t?e:r(n,e,o)})),n},r.findPoint=function(e,r){if(r=r||{},!n.isObject(r))throw new Error("options is invalid");var t,o=r.featureIndex||0,i=r.multiFeatureIndex||0,a=r.geometryIndex||0,u=r.coordIndex||0,s=r.properties;switch(e.type){case"FeatureCollection":o<0&&(o=e.features.length+o),s=s||e.features[o].properties,t=e.features[o].geometry;break;case"Feature":s=s||e.properties,t=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":t=e;break;default:throw new Error("geojson is invalid")}if(null===t)return null;var l=t.coordinates;switch(t.type){case"Point":return n.point(l,s,r);case"MultiPoint":return i<0&&(i=l.length+i),n.point(l[i],s,r);case"LineString":return u<0&&(u=l.length+u),n.point(l[u],s,r);case"Polygon":return a<0&&(a=l.length+a),u<0&&(u=l[a].length+u),n.point(l[a][u],s,r);case"MultiLineString":return i<0&&(i=l.length+i),u<0&&(u=l[i].length+u),n.point(l[i][u],s,r);case"MultiPolygon":return i<0&&(i=l.length+i),a<0&&(a=l[i].length+a),u<0&&(u=l[i][a].length-u),n.point(l[i][a][u],s,r)}throw new Error("geojson is invalid")},r.findSegment=function(e,r){if(r=r||{},!n.isObject(r))throw new Error("options is invalid");var t,o=r.featureIndex||0,i=r.multiFeatureIndex||0,a=r.geometryIndex||0,u=r.segmentIndex||0,s=r.properties;switch(e.type){case"FeatureCollection":o<0&&(o=e.features.length+o),s=s||e.features[o].properties,t=e.features[o].geometry;break;case"Feature":s=s||e.properties,t=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":t=e;break;default:throw new Error("geojson is invalid")}if(null===t)return null;var l=t.coordinates;switch(t.type){case"Point":case"MultiPoint":return null;case"LineString":return u<0&&(u=l.length+u-1),n.lineString([l[u],l[u+1]],s,r);case"Polygon":return a<0&&(a=l.length+a),u<0&&(u=l[a].length+u-1),n.lineString([l[a][u],l[a][u+1]],s,r);case"MultiLineString":return i<0&&(i=l.length+i),u<0&&(u=l[i].length+u-1),n.lineString([l[i][u],l[i][u+1]],s,r);case"MultiPolygon":return i<0&&(i=l.length+i),a<0&&(a=l[i].length+a),u<0&&(u=l[i][a].length-u-1),n.lineString([l[i][a][u],l[i][a][u+1]],s,r)}throw new Error("geojson is invalid")},r.flattenEach=s,r.flattenReduce=function(e,r,t){var n=t;return s(e,(function(e,o,i){n=0===o&&0===i&&void 0===t?e:r(n,e,o,i)})),n},r.geomEach=u,r.geomReduce=function(e,r,t){var n=t;return u(e,(function(e,o,i,a,u){n=0===o&&void 0===t?e:r(n,e,o,i,a,u)})),n},r.lineEach=c,r.lineReduce=function(e,r,t){var n=t;return c(e,(function(e,o,i,a){n=0===o&&void 0===t?e:r(n,e,o,i,a)})),n},r.propEach=i,r.propReduce=function(e,r,t){var n=t;return i(e,(function(e,o){n=0===o&&void 0===t?e:r(n,e,o)})),n},r.segmentEach=l,r.segmentReduce=function(e,r,t){var n=t,o=!1;return l(e,(function(e,i,a,u,s){n=!1===o&&void 0===t?e:r(n,e,i,a,u,s),o=!0})),n}},78109:(e,r,t)=>{var n=t(81042),o=t(84102),i=t(57996),a=t(13292).default,u=i.featureEach,s=(i.coordEach,o.polygon,o.featureCollection);function l(e){var r=new n(e);return r.insert=function(e){if("Feature"!==e.type)throw new Error("invalid feature");return e.bbox=e.bbox?e.bbox:a(e),n.prototype.insert.call(this,e)},r.load=function(e){var r=[];return Array.isArray(e)?e.forEach((function(e){if("Feature"!==e.type)throw new Error("invalid features");e.bbox=e.bbox?e.bbox:a(e),r.push(e)})):u(e,(function(e){if("Feature"!==e.type)throw new Error("invalid features");e.bbox=e.bbox?e.bbox:a(e),r.push(e)})),n.prototype.load.call(this,r)},r.remove=function(e,r){if("Feature"!==e.type)throw new Error("invalid feature");return e.bbox=e.bbox?e.bbox:a(e),n.prototype.remove.call(this,e,r)},r.clear=function(){return n.prototype.clear.call(this)},r.search=function(e){var r=n.prototype.search.call(this,this.toBBox(e));return s(r)},r.collides=function(e){return n.prototype.collides.call(this,this.toBBox(e))},r.all=function(){var e=n.prototype.all.call(this);return s(e)},r.toJSON=function(){return n.prototype.toJSON.call(this)},r.fromJSON=function(e){return n.prototype.fromJSON.call(this,e)},r.toBBox=function(e){var r;if(e.bbox)r=e.bbox;else if(Array.isArray(e)&&4===e.length)r=e;else if(Array.isArray(e)&&6===e.length)r=[e[0],e[1],e[3],e[4]];else if("Feature"===e.type)r=a(e);else{if("FeatureCollection"!==e.type)throw new Error("invalid geojson");r=a(e)}return{minX:r[0],minY:r[1],maxX:r[2],maxY:r[3]}},r}e.exports=l,e.exports.default=l}}]);